name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: ['1.23', '1.25']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go vet
      run: go vet ./...

    - name: Run go fmt check
      run: |
        fmt_files=$(gofmt -l .)
        if [ -n "$fmt_files" ]; then
          echo "The following files need formatting:"
          echo "$fmt_files"
          exit 1
        fi

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Build Linux AMD64
      run: |
        GOOS=linux GOARCH=amd64 go build -v \
          -ldflags="-s -w" \
          -o azure-cert-watchman-linux-amd64 \
          main.go

    - name: Build Linux ARM64
      run: |
        GOOS=linux GOARCH=arm64 go build -v \
          -ldflags="-s -w" \
          -o azure-cert-watchman-linux-arm64 \
          main.go

    - name: Test binary execution
      run: |
        ./azure-cert-watchman-linux-amd64 --help

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.25'

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...
      continue-on-error: true